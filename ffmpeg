#include "opencv2/core/core.hpp"
#include "opencv2/highgui/highgui.hpp"
#include "opencv2/imgproc.hpp"
#include "opencv2/opencv.hpp"
#include "opencv2/videoio.hpp"
#include <iostream>
#include<fstream>
#include<string.h>
#include "wtypes.h"

using namespace cv;
using namespace std;
void GetDesktopResolution(int& horizontal, int& vertical)
{
    RECT desktop;
    // Get a handle to the desktop window
    const HWND hDesktop = GetDesktopWindow();
    // Get the size of screen to the variable desktop
    GetWindowRect(hDesktop, &desktop);
    // The top left corner will have coordinates (0,0)
    // and the bottom right corner will have coordinates
    // (horizontal, vertical)
    horizontal = desktop.right;
    vertical = desktop.bottom;
}
int main()
{
    //Creating a list of video mp4 format files
    ifstream input;
    input.open("new_file.txt");
    string video_name;
    if (input.fail()) {
        cout << "No such file exists";
    }
    VideoWriter output("combinedThree.mp4", VideoWriter::fourcc('m', 'p', '4', 'v'), 30, Size(1920, 1080));
    vector<string> files;
    while (input >> video_name) {
        files.push_back(video_name);
        video_name.clear();
    }

    int video_index = 0;
    VideoCapture cap(files[0]);

    if (!cap.isOpened()) {
        cout << "No such file exists" << endl;
    }
    int horizontal = cap.get(CAP_PROP_FRAME_WIDTH);
    int vertical = cap.get(CAP_PROP_FRAME_HEIGHT);

    while (cap.isOpened()) {
        Mat frame;
        cap >> frame;
        if (frame.empty()) {
            video_index++;
            if (video_index >= files.size()) {
                break;
            }
            cap = VideoCapture(files[video_index]);
            cap >> frame;
        }
        imshow("Frame", frame);
        output.write(frame);
        char c = (char)waitKey(25);
        if (c == 27)
            break;
        }
    
    return 0;
}
